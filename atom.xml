<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>Eric&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://eric12345566.github.io/"/>
  <updated>2019-11-18T06:41:22.377Z</updated>
  <id>https://eric12345566.github.io/</id>
  
  <author>
    <name>Eric Shih</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何用手機拷貝 Mifare Card（門禁卡）？</title>
    <link href="https://eric12345566.github.io/2019/11/18/nfc-card-copy/"/>
    <id>https://eric12345566.github.io/2019/11/18/nfc-card-copy/</id>
    <published>2019-11-18T00:23:39.000Z</published>
    <updated>2019-11-18T06:41:22.377Z</updated>
    
    <content type="html"><![CDATA[<p>一開始是覺得每次要進圖書館要刷學生證，當忘記帶學生證的時候就會變得麻煩。因此，就想到不知道可不可以用拷貝的方式，讓我手上多一張可以刷的學生證？也因此產生了以下幾個大膽的猜測以及實作。</p><h2 id="門禁系統到底檢查什麼資料？"><a href="#門禁系統到底檢查什麼資料？" class="headerlink" title="門禁系統到底檢查什麼資料？"></a>門禁系統到底檢查什麼資料？</h2><p>假設你跟我的學生證一樣，是擁有悠遊卡功能的學生證。如果你使用工具嘗試查看卡片的資料，會發現所有的 sector 都已被加密，無法查看內部資料。到頭來我們能看到的，就只有 UID 等等卡片本身的基本資訊。</p><a id="more"></a><p>我沒有找到悠遊卡公司對於這種客製悠遊卡的技術文件，但我猜測，卡片中的所有 sector 的金鑰只有悠遊卡公司所有，也就是說一般的門禁系統不可能有辦法讀取裡頭的資料。所以唯一能檢查的部分，就是 UID 了。</p><p>如果你對 M1 卡有了解，你會知道 UID「理論上」是全世界唯一的，這也造就了許多門禁系統使用 UID 當認證資料，因為在正常情況下，你無法找到第二張 UID 相同的卡片。</p><p>聰明的你一定想到了：該買一張可以更改 UID 的 M1 卡囉！</p><hr><h2 id="Mifare-Classic-1k"><a href="#Mifare-Classic-1k" class="headerlink" title="Mifare Classic 1k"></a>Mifare Classic 1k</h2><p>這款 NFC 卡是目前市面上流通最廣的類型。許多大樓門禁卡、學生證，甚至到悠遊卡都是採用這款。雖然流通慎廣，但卻非最安全。事實上，市面上已經有許多工具可以用來破解這類卡的加密區塊，取得裡頭的重要資料，甚至是拷貝一張。</p><p>M1 卡（這張卡的簡稱）的儲存結構為，16 個 Sector，每個 Sector 又有 4 個 Block，每一個 Block 16 Byte。每個 Sector 最後一個 Block 用來存放 KeyA、控制代碼、KeyB，主要用來進行加解密以及告訴讀卡機他的讀取方式。</p><p>最特別的部分，也是今天我們主要要處理的部分是 Sector 0 的 Block 0。理論上，他是出廠時就會寫死的數據，也就是 UID、BCC 跟廠商代號。UID 為全球唯一的 ID，正常情況下不會出現第二張 UID 一樣卡片，這也是為什麼廠商認為使用 UID 進行身份驗證會是安全的。當然，我們現在知道了，他是最不安全的驗證方式。幾乎跟驗證沒加密的資料一樣不安全了。</p><hr><h2 id="準備工作"><a href="#準備工作" class="headerlink" title="準備工作"></a>準備工作</h2><p>你需要的工具如下：</p><ol><li>有 NFC 功能的 Android 手機</li><li><a href="https://www.icaria.de/mct/releases/" target="_blank" rel="noopener">MCT App</a>（選擇最新版本號）</li><li>CUID 卡</li></ol><p>這邊要解釋一下，如果你到網站上搜尋一波 UID 可更改的卡片，你最常會找到兩種類型的卡：</p><p><strong>UID卡</strong> :</p><ol><li>別名 Chinese Magic Card Gen 1</li><li>使用 Backdoor 指令來修改卡片 UID</li><li>網路上所講的無法穿透「防火牆」，意思是門禁讀卡機已知如何用 Backdoor 指令檢查是不是 UID卡，來認證是否有整當存取權</li><li>目前很常會被門禁系統擋下</li></ol><p><strong>CUID卡</strong></p><ol><li>別名 Chinese Magic Card Gen 2</li><li>與 Gen 1 不一樣的方式寫入 UID</li><li>目前大部分的機器不會檔</li><li>MCT App 支援 Clone UID</li></ol><p>當然還有 FUID、FCUID 等等的卡片，第一次玩複製不建議使用，雖然他們更難被防火牆擋住，但對於新手測試來說並不方便（一次性寫入、需要封卡..等複雜操作）</p><p>至於要在哪裡買？請自己上網找囉！建議在購買之前先問看看店家是不是「Chinese Magic Card Gen 2」，避免店家亂寫買錯東西。</p><hr><h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><h3 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a>STEP 1</h3><p>打開 MCT，點選右下的工具按鈕後，點選Clone UID</p><h3 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a>STEP 2</h3><p>將你要複製的卡靠近手機 NFC 感應處，讀取 UID</p><h3 id="STEP-3"><a href="#STEP-3" class="headerlink" title="STEP 3"></a>STEP 3</h3><p>點選「Calculate」讓程式幫你自動計算 BCC，並且準備進行拷貝</p><h3 id="STEP-4"><a href="#STEP-4" class="headerlink" title="STEP 4"></a>STEP 4</h3><p>將要被寫入的 CUID 卡靠近手機 NFC 處，手機這時會寫入，請不要隨意移動，否則卡片匯損毀。</p><p>基本上 Log 沒顯示錯誤就是成功了，可以去測試囉！</p><h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>經過測試後，成功可以刷過學校圖書館的門禁，大概也可以刷過其他設施的門禁了。現在應該來研究如何在卡片上列印（大誤）。</p><p>我也針對一些大樓的門禁卡進行分析，發現很多卡也都是使用 UID 進行認證，很多甚至連其他 sector 的 Key A, Key B 都是預設密碼。在現在的社會，這樣的大樓門禁幾乎可以說是毫無防備功能，在乎安全的朋友們，可能得注意了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一開始是覺得每次要進圖書館要刷學生證，當忘記帶學生證的時候就會變得麻煩。因此，就想到不知道可不可以用拷貝的方式，讓我手上多一張可以刷的學生證？也因此產生了以下幾個大膽的猜測以及實作。&lt;/p&gt;
&lt;h2 id=&quot;門禁系統到底檢查什麼資料？&quot;&gt;&lt;a href=&quot;#門禁系統到底檢查什麼資料？&quot; class=&quot;headerlink&quot; title=&quot;門禁系統到底檢查什麼資料？&quot;&gt;&lt;/a&gt;門禁系統到底檢查什麼資料？&lt;/h2&gt;&lt;p&gt;假設你跟我的學生證一樣，是擁有悠遊卡功能的學生證。如果你使用工具嘗試查看卡片的資料，會發現所有的 sector 都已被加密，無法查看內部資料。到頭來我們能看到的，就只有 UID 等等卡片本身的基本資訊。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="NFC-card" scheme="https://eric12345566.github.io/tags/NFC-card/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://eric12345566.github.io/2019/11/17/hello-world/"/>
    <id>https://eric12345566.github.io/2019/11/17/hello-world/</id>
    <published>2019-11-16T17:34:55.000Z</published>
    <updated>2019-11-17T16:55:08.461Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><p>安裝這個部落格，比我想的還艱難，不過總算是解決了大部分的問題了。之後我會再發一篇文章，講解一下這次我架設部落格，到底發生了什麼事情。</p><p>而這篇招呼文，想帶大家認識一下我，也認識一下這個部落格。以下會以問答式的方式，來闡述我的心路歷程。</p><a id="more"></a><h2 id="為什麼要架部落格？"><a href="#為什麼要架部落格？" class="headerlink" title="為什麼要架部落格？"></a>為什麼要架部落格？</h2><p>為了發大財？當然不是。</p><p>最主要的目的其實是想紀錄自己研究、學習技術的心得、筆記或過程，希望藉此看見自己的成長，甚至是督促自己持續進步學習，也可以順便為有需要的網友們，提供一個參考教學文件。</p><h2 id="部落格採用的平台、系統？"><a href="#部落格採用的平台、系統？" class="headerlink" title="部落格採用的平台、系統？"></a>部落格採用的平台、系統？</h2><p>本來我想在我的伺服器上架設 Ghost，架設好之後發現 Ghost 對非英文使用者的友善度低到很嚇人。一氣之下砍掉 Ghost 之後改用 Hexo，這才體會到什麼叫做專屬於 Geek 的 Blog CMS。</p><p>總而言之，使用的是 Hexo + Github Page，theme 的部分使用 next。還有很多東西沒設定好、還沒深入了解設定的部分，請大家多多見諒 + 提建議囉！</p><h2 id="我的身份？"><a href="#我的身份？" class="headerlink" title="我的身份？"></a>我的身份？</h2><p>大學生/Web App Developer/音樂人，這幾種身份都不敢說做得很好，但我一直在持續努力精進自己，期望有一天能出頭天。</p><h2 id="想跟我聊聊天？"><a href="#想跟我聊聊天？" class="headerlink" title="想跟我聊聊天？"></a>想跟我聊聊天？</h2><p>我會盡快把 Disqus 裝好的先別急啊QQ</p><p>以上，請多多指教！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h1&gt;&lt;p&gt;安裝這個部落格，比我想的還艱難，不過總算是解決了大部分的問題了。之後我會再發一篇文章，講解一下這次我架設部落格，到底發生了什麼事情。&lt;/p&gt;
&lt;p&gt;而這篇招呼文，想帶大家認識一下我，也認識一下這個部落格。以下會以問答式的方式，來闡述我的心路歷程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活紀錄" scheme="https://eric12345566.github.io/categories/%E7%94%9F%E6%B4%BB%E7%B4%80%E9%8C%84/"/>
    
    
      <category term="打招呼" scheme="https://eric12345566.github.io/tags/%E6%89%93%E6%8B%9B%E5%91%BC/"/>
    
  </entry>
  
</feed>
